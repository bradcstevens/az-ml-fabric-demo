{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.3.11034",
      "templateHash": "18131942246818350553"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "resourceToken": {
      "type": "string"
    },
    "principalId": {
      "type": "string"
    },
    "tags": {
      "type": "object",
      "defaultValue": {}
    },
    "privateEndpointsSubnetId": {
      "type": "string"
    },
    "keyVaultDnsZoneId": {
      "type": "string"
    },
    "acrDnsZoneId": {
      "type": "string"
    }
  },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim-",
      "appConfigurationConfigurationStores": "appcs-",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "authorizationPolicyDefinitions": "policy-",
      "automationAutomationAccounts": "aa-",
      "blueprintBlueprints": "bp-",
      "blueprintBlueprintsArtifacts": "bpa-",
      "cacheRedis": "redis-",
      "cdnProfiles": "cdnp-",
      "cdnProfilesEndpoints": "cdne-",
      "cognitiveServicesAccounts": "cog-",
      "cognitiveServicesFormRecognizer": "cog-fr-",
      "cognitiveServicesTextAnalytics": "cog-ta-",
      "computeAvailabilitySets": "avail-",
      "computeCloudServices": "cld-",
      "computeDiskEncryptionSets": "des-",
      "computeDisks": "disk-",
      "computeGalleries": "gal-",
      "computeSnapshots": "snap-",
      "computeVirtualMachines": "vm-",
      "computeVirtualMachineScaleSets": "vmss-",
      "containerInstanceContainerGroups": "ci-",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks-",
      "databricksWorkspaces": "dbw-",
      "dataFactoryFactories": "adf-",
      "dataLakeAnalyticsAccounts": "dla-",
      "dataLakeStoreAccounts": "dls-",
      "dataMigrationServices": "dms-",
      "dBforMySQLServers": "mysql-",
      "dBforPostgreSQLServers": "psql-",
      "devicesIotHubs": "iot-",
      "devicesProvisioningServices": "provs-",
      "devicesProvisioningServicesCertificates": "pcert-",
      "documentDBDatabaseAccounts": "cosmos-",
      "eventGridDomains": "evgd-",
      "eventGridTopics": "evgt-",
      "eventHubNamespaces": "evhns-",
      "eventHubNamespacesEventHubs": "evh-",
      "hdInsightClustersHadoop": "hadoop-",
      "hdInsightClustersHbase": "hbase-",
      "hdInsightClustersKafka": "kafka-",
      "hdInsightClustersMl": "mls-",
      "hdInsightClustersSpark": "spark-",
      "hdInsightClustersStorm": "storm-",
      "hybridComputeMachines": "arcs-",
      "hybridKubernetesConnectedClusters": "arck-",
      "insightsActionGroups": "ag-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "kubernetesConnectedClusters": "arck-",
      "kustoClusters": "dec-",
      "loadTesting": "lt-",
      "logicWorkflows": "logic-",
      "machineLearningServicesWorkspaces": "mlw-",
      "managedIdentityUserAssignedIdentities": "id-",
      "managementManagementGroups": "mg-",
      "migrateAssessmentProjects": "migr-",
      "networkApplicationGateways": "agw-",
      "networkApplicationSecurityGroups": "asg-",
      "networkAzureFirewalls": "afw-",
      "networkBastionHosts": "bas-",
      "networkConnections": "con-",
      "networkDnsZones": "dnsz-",
      "networkExpressRouteCircuits": "erc-",
      "networkFirewallPolicies": "afwp-",
      "networkFirewallPolicyRuleGroups": "wafrg-",
      "networkFrontDoors": "fd-",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
      "networkLoadBalancers": "lb-",
      "networkLoadBalancersInbound": "lbi-",
      "networkLoadBalancersInternal": "lbi-",
      "networkLoadBalancersOutbound": "lbo-",
      "networkLocalNetworkGateways": "lgw-",
      "networkNatGateways": "ng-",
      "networkNetworkInterfaces": "nic-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
      "networkNetworkWatchers": "nw-",
      "networkPrivateDnsZones": "pdnsz-",
      "networkPrivateLinkServices": "pl-",
      "networkPublicIPAddresses": "pip-",
      "networkPublicIPPrefixes": "ippre-",
      "networkRouteFilters": "rf-",
      "networkRouteTables": "rt-",
      "networkRouteTablesRoutes": "udr-",
      "networkTrafficManagerProfiles": "traf-",
      "networkVirtualNetworkGateways": "vgw-",
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
      "networkVirtualWans": "vwan-",
      "networkVpnGateways": "vpng-",
      "networkVpnGatewaysVpnConnections": "vcn-",
      "networkVpnGatewaysVpnSites": "vst-",
      "notificationHubsNamespaces": "ntfns-",
      "notificationHubsNamespacesNotificationHubs": "ntf-",
      "operationalInsightsWorkspaces": "log-",
      "portalDashboards": "dash-",
      "powerBIDedicatedCapacities": "pbi-",
      "purviewAccounts": "pview-",
      "recoveryServicesVaults": "rsv-",
      "resourcesResourceGroups": "rg-",
      "searchSearchServices": "srch-",
      "serviceBusNamespaces": "sb-",
      "serviceBusNamespacesQueues": "sbq-",
      "serviceBusNamespacesTopics": "sbt-",
      "serviceEndPointPolicies": "se-",
      "serviceFabricClusters": "sf-",
      "signalRServiceSignalR": "sigr-",
      "sqlManagedInstances": "sqlmi-",
      "sqlServers": "sql-",
      "sqlServersFirewallRules": "sqlfw-",
      "sqlServersDatabase": "sqldb-",
      "storageStorageAccounts": "st",
      "storageStorageAccountsFileServices": "file-",
      "storageStorageAccountsBlobServices": "blob-",
      "storageStorageAccountsQueueServices": "queue-",
      "storageStorageAccountsTableServices": "table-",
      "streamAnalyticsCluster": "asa-",
      "synapseWorkspaces": "syn-",
      "synapseWorkspacesAnalyticsWorkspaces": "synw-",
      "synapseWorkspacesSqlPoolsDedicated": "syndp-",
      "synapseWorkspacesSqlPoolsSpark": "synsp-",
      "timeSeriesInsightsEnvironments": "tsi-",
      "webServerFarms": "plan-",
      "webSitesAppService": "app-",
      "webSitesAppServiceEnvironment": "ase-",
      "webSitesFunctions": "func-",
      "fabricWorkspaces": "fabric-",
      "fabricCapacities": "fabriccap-"
    },
    "abbrs": "[variables('$fxv#0')]",
    "keyVaultName": "[take(format('{0}{1}{2}', variables('abbrs').keyVaultVaults, replace(parameters('environmentName'), '-', ''), parameters('resourceToken')), 24)]",
    "storageAccountName": "[if(greaterOrEquals(length(format('st{0}{1}', replace(parameters('environmentName'), '-', ''), parameters('resourceToken'))), 3), take(format('st{0}{1}', replace(parameters('environmentName'), '-', ''), parameters('resourceToken')), 24), take(format('st{0}{1}demo', replace(parameters('environmentName'), '-', ''), parameters('resourceToken')), 24))]",
    "containerRegistryName": "[if(greaterOrEquals(length(format('cr{0}{1}', replace(parameters('environmentName'), '-', ''), parameters('resourceToken'))), 5), take(format('cr{0}{1}', replace(parameters('environmentName'), '-', ''), parameters('resourceToken')), 50), format('cr{0}{1}demo', replace(parameters('environmentName'), '-', ''), parameters('resourceToken')))]"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "tenantId": "[tenant().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enableRbacAuthorization": true,
        "publicNetworkAccess": "Disabled",
        "networkAcls": {
          "defaultAction": "Deny",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-pe', variables('keyVaultName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "subnet": {
          "id": "[parameters('privateEndpointsSubnetId')]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "[format('{0}-pe-connection', variables('keyVaultName'))]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
              "groupIds": [
                "vault"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', format('{0}-pe', variables('keyVaultName')), 'default')]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "privatelink-vaultcore-azure-net",
            "properties": {
              "privateDnsZoneId": "[parameters('keyVaultDnsZoneId')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-pe', variables('keyVaultName')))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "dnsEndpointType": "Standard",
        "defaultToOAuthAuthentication": false,
        "publicNetworkAccess": "Enabled",
        "allowCrossTenantReplication": false,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "requireInfrastructureEncryption": false,
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/default/mldata', variables('storageAccountName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/default/models', variables('storageAccountName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/default/artifacts', variables('storageAccountName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-01-01-preview",
      "name": "[variables('containerRegistryName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Premium"
      },
      "properties": {
        "adminUserEnabled": false,
        "publicNetworkAccess": "Disabled",
        "zoneRedundancy": "Disabled",
        "networkRuleSet": {
          "defaultAction": "Deny"
        },
        "policies": {
          "quarantinePolicy": {
            "status": "disabled"
          },
          "trustPolicy": {
            "type": "Notary",
            "status": "disabled"
          },
          "retentionPolicy": {
            "days": 7,
            "status": "disabled"
          },
          "exportPolicy": {
            "status": "enabled"
          },
          "azureADAuthenticationAsArmPolicy": {
            "status": "enabled"
          },
          "softDeletePolicy": {
            "retentionDays": 7,
            "status": "disabled"
          }
        },
        "encryption": {
          "status": "disabled"
        },
        "dataEndpointEnabled": false,
        "networkRuleBypassOptions": "AzureServices"
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-pe', variables('containerRegistryName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "subnet": {
          "id": "[parameters('privateEndpointsSubnetId')]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "[format('{0}-pe-connection', variables('containerRegistryName'))]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
              "groupIds": [
                "registry"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', format('{0}-pe', variables('containerRegistryName')), 'default')]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "privatelink-azurecr-io",
            "properties": {
              "privateDnsZoneId": "[parameters('acrDnsZoneId')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-pe', variables('containerRegistryName')))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('principalId')))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), 'b86a8fe4-44ce-4948-aee5-eccb2c155cd7')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b86a8fe4-44ce-4948-aee5-eccb2c155cd7')]",
        "principalType": "User",
        "principalId": "[parameters('principalId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('principalId')))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageAccountName'))]",
      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalType": "User",
        "principalId": "[parameters('principalId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('principalId')))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', variables('containerRegistryName'))]",
      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "principalType": "User",
        "principalId": "[parameters('principalId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]"
      ]
    }
  ],
  "outputs": {
    "keyVaultId": {
      "type": "string",
      "value": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "keyVaultUri": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2022-07-01').vaultUri]"
    },
    "storageAccountId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "containerRegistryId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]"
    },
    "containerRegistryName": {
      "type": "string",
      "value": "[variables('containerRegistryName')]"
    },
    "containerRegistryLoginServer": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), '2023-01-01-preview').loginServer]"
    }
  }
}